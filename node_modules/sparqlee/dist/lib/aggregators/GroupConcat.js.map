{"version":3,"file":"GroupConcat.js","sourceRoot":"","sources":["../../../lib/aggregators/GroupConcat.ts"],"names":[],"mappings":";;;AACA,kDAA8C;AAC9C,6CAAmD;AAEnD,MAAa,WAAY,SAAQ,gCAAmB;IAApD;;QACU,UAAK,GAAuB,SAAS,CAAC;IAmBhD,CAAC;IAlBQ,MAAM,CAAC,UAAU;QACtB,OAAO,IAAA,gBAAM,EAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAEM,GAAG,CAAC,IAAc;QACvB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;SAC3C;IACH,CAAC;IAEM,MAAM;QACX,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC5B,OAAO,WAAW,CAAC,UAAU,EAAE,CAAC;SACjC;QACD,OAAO,IAAA,gBAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;CACF;AApBD,kCAoBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport { string } from '../functions/Helpers';\nimport { AggregatorComponent } from './Aggregator';\n\nexport class GroupConcat extends AggregatorComponent {\n  private state: string | undefined = undefined;\n  public static emptyValue(): RDF.Term {\n    return string('').toRDF();\n  }\n\n  public put(term: RDF.Term): void {\n    if (this.state === undefined) {\n      this.state = term.value;\n    } else {\n      this.state += this.separator + term.value;\n    }\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return GroupConcat.emptyValue();\n    }\n    return string(this.state).toRDF();\n  }\n}\n"]}